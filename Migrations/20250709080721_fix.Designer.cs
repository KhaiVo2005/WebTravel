// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebTravel.Data;

#nullable disable

namespace WebTravel.Migrations
{
    [DbContext(typeof(TravelDbContext))]
    [Migration("20250709080721_fix")]
    partial class fix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BaiDang", b =>
                {
                    b.Property<Guid>("MaBaiDang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnhVideo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LuotLike")
                        .HasColumnType("int");

                    b.Property<Guid>("MaKH")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaBaiDang");

                    b.HasIndex("MaKH");

                    b.ToTable("BaiDangs");
                });

            modelBuilder.Entity("CmtBaiDang", b =>
                {
                    b.Property<Guid>("MaDanhGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnhVideo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MaBaiDang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaKH")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDanhGia");

                    b.HasIndex("MaBaiDang");

                    b.ToTable("CmtBaiDangs");
                });

            modelBuilder.Entity("DanhGiaDiaDiem", b =>
                {
                    b.Property<Guid>("MaDG")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnhVideo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MaDD")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaKH")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoSao")
                        .HasColumnType("int");

                    b.HasKey("MaDG");

                    b.HasIndex("MaDD");

                    b.ToTable("DanhGiaDiaDiems");
                });

            modelBuilder.Entity("DanhGiaDichVu", b =>
                {
                    b.Property<Guid>("MaDanhGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnhVideo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DanhGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("MaThue")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoSao")
                        .HasColumnType("int");

                    b.HasKey("MaDanhGia");

                    b.HasIndex("MaThue");

                    b.ToTable("DanhGiaDichVus");
                });

            modelBuilder.Entity("DiaDiem", b =>
                {
                    b.Property<Guid>("MaDD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Anh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MaTP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDiaDiem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDD");

                    b.HasIndex("MaTP");

                    b.ToTable("DiaDiems");
                });

            modelBuilder.Entity("DiaDiemTour", b =>
                {
                    b.Property<Guid>("MaDiaDiemTour")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaDiaDiem")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaTour")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MaDiaDiemTour");

                    b.HasIndex("MaDiaDiem");

                    b.HasIndex("MaTour");

                    b.ToTable("DiaDiemTours");
                });

            modelBuilder.Entity("KhachHang", b =>
                {
                    b.Property<Guid>("MaKH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnhDaiDien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKH");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("KhachHang_LoaiDichVu", b =>
                {
                    b.Property<Guid>("MaThue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DenNgay")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MaDiaDiemTour")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaLoaiDV")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<DateTime>("TuNgay")
                        .HasColumnType("datetime2");

                    b.HasKey("MaThue");

                    b.HasIndex("MaDiaDiemTour");

                    b.ToTable("KhachHang_LoaiDichVus");
                });

            modelBuilder.Entity("LoaiDichVu", b =>
                {
                    b.Property<Guid>("MaLoaiDV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Anh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GiaDV")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("MaDD")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaNV")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLoaiDV");

                    b.HasIndex("MaDD");

                    b.HasIndex("MaNV");

                    b.ToTable("LoaiDichVus");
                });

            modelBuilder.Entity("NhanVien", b =>
                {
                    b.Property<Guid>("MaNV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNV");

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("ThanhPho", b =>
                {
                    b.Property<Guid>("MaTP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenThanhPho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTP");

                    b.ToTable("ThanhPhos");
                });

            modelBuilder.Entity("TourCaNhan", b =>
                {
                    b.Property<Guid>("MaTour")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaKH")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenTour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTour");

                    b.HasIndex("MaKH");

                    b.ToTable("TourCaNhans");
                });

            modelBuilder.Entity("BaiDang", b =>
                {
                    b.HasOne("KhachHang", "KhachHang")
                        .WithMany("BaiDangs")
                        .HasForeignKey("MaKH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("CmtBaiDang", b =>
                {
                    b.HasOne("BaiDang", "BaiDang")
                        .WithMany("CmtBaiDangs")
                        .HasForeignKey("MaBaiDang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaiDang");
                });

            modelBuilder.Entity("DanhGiaDiaDiem", b =>
                {
                    b.HasOne("DiaDiem", "DiaDiem")
                        .WithMany("DanhGiaDiaDiems")
                        .HasForeignKey("MaDD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiaDiem");
                });

            modelBuilder.Entity("DanhGiaDichVu", b =>
                {
                    b.HasOne("KhachHang_LoaiDichVu", "KhachHang_LoaiDichVu")
                        .WithMany("DanhGiaDichVus")
                        .HasForeignKey("MaThue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang_LoaiDichVu");
                });

            modelBuilder.Entity("DiaDiem", b =>
                {
                    b.HasOne("ThanhPho", "ThanhPho")
                        .WithMany("DiaDiems")
                        .HasForeignKey("MaTP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ThanhPho");
                });

            modelBuilder.Entity("DiaDiemTour", b =>
                {
                    b.HasOne("DiaDiem", "DiaDiem")
                        .WithMany("DiaDiemTours")
                        .HasForeignKey("MaDiaDiem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TourCaNhan", "TourCaNhan")
                        .WithMany("DiaDiemTours")
                        .HasForeignKey("MaTour")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiaDiem");

                    b.Navigation("TourCaNhan");
                });

            modelBuilder.Entity("KhachHang_LoaiDichVu", b =>
                {
                    b.HasOne("DiaDiemTour", "DiaDiemTour")
                        .WithMany("KhachHang_LoaiDichVus")
                        .HasForeignKey("MaDiaDiemTour")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiaDiemTour");
                });

            modelBuilder.Entity("LoaiDichVu", b =>
                {
                    b.HasOne("DiaDiem", "DiaDiem")
                        .WithMany("LoaiDichVus")
                        .HasForeignKey("MaDD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NhanVien", "NhanVien")
                        .WithMany("LoaiDichVus")
                        .HasForeignKey("MaNV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiaDiem");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("TourCaNhan", b =>
                {
                    b.HasOne("KhachHang", "KhachHang")
                        .WithMany("TourCaNhans")
                        .HasForeignKey("MaKH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("BaiDang", b =>
                {
                    b.Navigation("CmtBaiDangs");
                });

            modelBuilder.Entity("DiaDiem", b =>
                {
                    b.Navigation("DanhGiaDiaDiems");

                    b.Navigation("DiaDiemTours");

                    b.Navigation("LoaiDichVus");
                });

            modelBuilder.Entity("DiaDiemTour", b =>
                {
                    b.Navigation("KhachHang_LoaiDichVus");
                });

            modelBuilder.Entity("KhachHang", b =>
                {
                    b.Navigation("BaiDangs");

                    b.Navigation("TourCaNhans");
                });

            modelBuilder.Entity("KhachHang_LoaiDichVu", b =>
                {
                    b.Navigation("DanhGiaDichVus");
                });

            modelBuilder.Entity("NhanVien", b =>
                {
                    b.Navigation("LoaiDichVus");
                });

            modelBuilder.Entity("ThanhPho", b =>
                {
                    b.Navigation("DiaDiems");
                });

            modelBuilder.Entity("TourCaNhan", b =>
                {
                    b.Navigation("DiaDiemTours");
                });
#pragma warning restore 612, 618
        }
    }
}
